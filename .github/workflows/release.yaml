name: Create Release

on:
  push:
    tags:
      - "v*.*"

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Check if release already exists
      - name: Check for Existing Release
        id: check_release
        uses: actions/github-script@v6
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            return releases.data.some(release => release.tag_name === '${{ github.ref_name }}');
      
      # Create release if it doesn't exist
      - name: Create GitHub Release
        if: steps.check_release.outputs.result == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: "Automated release for version ${{ github.ref_name }}"
          draft: false
          prerelease: false
