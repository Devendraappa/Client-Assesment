name: Create Tag and Release

on:
  push:
    tags:
      - 'v*'  # Trigger when a tag matching v* is pushed, like v1.0.0, v1.1.0, etc.

jobs:
  release:
    runs-on: ubuntu-latest

    # Define the environment variables at the job level
    env:
      GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}  # Use the token for authentication

    steps:
    # Step 1: Checkout the repository
    - name: Checkout the repository
      uses: actions/checkout@v3

    # Step 2: Get the pushed tag
    - name: Get the pushed tag
      id: get_tag
      run: |
        # Extract the tag name from the GITHUB_REF (refs/tags/v1.0.0)
        TAG_NAME=${GITHUB_REF#refs/tags/}  # Remove 'refs/tags/' to get the tag name
        echo "Tag that was pushed: $TAG_NAME"
        echo "::set-output name=tag_name::$TAG_NAME"  # Set the tag name as output for use in the next step

    # Step 3: Set up Git for creating a new tag
    - name: Set up Git for release
      run: |
        git config user.name "devendraappa"
        git config user.email "devendraappa.kune@gmail.com"

    # Step 4: Create a new tag using the pushed tag name + current date
    - name: Create a new tag with pushed tag + date
      id: create_tag
      run: |
        # Get the tag name from the previous step (e.g., v1.0.0)
        TAG_NAME="${{ steps.get_tag.outputs.tag_name }}"  
        DATE=$(date +'%Y%m%d')  # Get current date in YYYYMMDD format
        NEW_TAG="${TAG_NAME}-${DATE}"  # Combine the pushed tag name with the current date
        echo "New tag created: $NEW_TAG"
        
        # Create the new tag and push it to GitHub
        git tag -a "$NEW_TAG" -m "Automated tag creation for $NEW_TAG"
        git push origin "$NEW_TAG"
        
        echo "::set-output name=new_tag::$NEW_TAG"  # Set output for the new tag

    # Step 5: Create a GitHub release
    - name: Create a GitHub release
      run: |
        TAG_NAME="${{ steps.create_tag.outputs.new_tag }}"  # Use the new tag created in Step 4
        echo "Creating release for tag: $TAG_NAME"
        curl -X POST \
          -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
          -d "{
            \"tag_name\": \"$TAG_NAME\",
            \"name\": \"Release $TAG_NAME\",
            \"body\": \"Automated release for version $TAG_NAME\",
            \"draft\": false,
            \"prerelease\": false
          }" \
          "https://api.github.com/repos/${{ github.repository }}/releases"
